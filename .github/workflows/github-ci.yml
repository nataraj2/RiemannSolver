name: Riemann solver build and test

on:
  push:
    branches:
      - main  # Replace with your desired branch name

jobs:
  mpi_parallel_job:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mpi_version: [openmpi, mpich]  # Add other MPI implementations if needed
        parallelism: [1, 1]  # Set the number of parallel processes you want to use

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up MPI
        uses: mpioperator/mpi-operator@v1
        with:
          mpi-install: ${{ matrix.mpi_version }}

      - name: Build code
        run: |
          # Replace these commands with the ones needed to build your MPI code
          # For example, if using CMake:
          cd Exec/Sod
          make

      - name: Run MPI code
        run: |
          # Replace 'mpi_executable' with the actual name of your MPI executable
          # Adjust the '-np' flag to the desired number of parallel processes (e.g., '-np 4')
          mpirun -np ${{ matrix.parallelism }} ./riemann_1d.ex
